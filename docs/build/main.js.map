{"version":3,"sources":["../../src/providers/weather/weather.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/cities/cities.ts","../../src/assets/config.ts","../../src/components/add-city/add-city.ts","../../src/pages/city/city.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/cities/cities.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ICity } from '../../models/city';\nimport { ICityWeather } from '../../models/city-weather';\nimport { IWeatherValue } from '../../models/weather-value';\nimport { config } from '../../assets/config';\n\n/*\n  Generated class for the WeatherProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class WeatherProvider {\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Return current weather for a list of cities\n   * @param cities\n   */\n  getWeather(cities: ICity[]) {\n    if (!cities || cities.length === 0)\n      return Promise.resolve([]);\n\n    return this.http.get(`https://api.openweathermap.org/data/2.5/group?id=${cities.map(c => c.id).join(\",\")}&appid=${config.openWeatherMapApiKey}&units=metric&lang=fr`)\n      .toPromise().then((res: any) => {\n        let weathers: ICityWeather[] = [];\n        if (res && res.list && res.list.length > 0) {\n          for (var i = 0; i < res.list.length; i++) {\n            let currentWeather = res.list[i];\n            weathers.push(this.convertWeather(currentWeather, false));\n          }\n        }\n        return weathers;\n      });\n  }\n\n  /**\n   * Return current weather for geolocation data\n   * @param longitude\n   * @param latitude\n   */\n  getWeatherFromCoord(longitude: number, latitude: number) {\n    return this.http.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${config.openWeatherMapApiKey}&units=metric&lang=fr`)\n      .toPromise().then((res: any) => {\n        return this.convertWeather(res, true);\n      });\n  }\n\n  /**\n   * Return forecast weather for a city\n   * @param city\n   */\n  getForecastWeather(city: ICity) {\n    return this.http.get(`https://api.openweathermap.org/data/2.5/forecast?id=${city.id}&appid=${config.openWeatherMapApiKey}&units=metric&lang=fr`)\n      .toPromise().then((res: any) => {\n        let weathers: IWeatherValue[] = [];\n        if (res && res.list && res.list.length > 0) {\n          for (var i = 0; i < res.list.length; i++) {\n            let currentWeather = res.list[i];\n\n            //Hack to get only mid-day forecast\n            if (currentWeather.dt_txt.indexOf(\"12:00:00\") > -1) {\n              weathers.push(this.convertForecastWeather(currentWeather));\n            }\n          }\n        }\n        return weathers;\n      });\n  }\n\n  /**\n   * Convert raw weather result from API\n   * @param rawWeather\n   * @param isLocal\n   */\n  private convertWeather(rawWeather: any, isLocal: boolean): ICityWeather {\n    return {\n      city: {\n        id: rawWeather.id,\n        country: rawWeather.sys.country,\n        name: rawWeather.name,\n        isLocal: isLocal\n      },\n      weather: {\n        humidity: rawWeather.main.humidity,\n        temperature: rawWeather.main.temp,\n        windSpeed: this.convertWindSpeed(rawWeather.wind.speed),\n        weatherDescription: rawWeather.weather[0].description,\n        weatherType: rawWeather.weather[0].icon\n      }\n    };\n  }\n\n  /**\n   * Convert raw forecast result from API\n   * @param rawWeather\n   */\n  private convertForecastWeather(rawWeather: any): IWeatherValue {\n    return {\n      date: rawWeather.dt_txt,\n      humidity: rawWeather.main.humidity,\n      temperature: rawWeather.main.temp,\n      windSpeed: this.convertWindSpeed(rawWeather.wind.speed),\n      weatherDescription: rawWeather.weather[0].description,\n      weatherType: rawWeather.weather[0].icon\n    };\n  }\n\n  /**\n   * Convert wind speed from m/s to km/h\n   * @param windSpeed\n   */\n  private convertWindSpeed(windSpeed: number) {\n    return windSpeed * 3.6;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/weather/weather.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 136;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 136\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 178;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 178\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { CitiesProvider } from '../../providers/cities/cities';\nimport { ModalController } from 'ionic-angular';\nimport { AddCityComponent } from '../../components/add-city/add-city';\nimport { WeatherProvider } from '../../providers/weather/weather';\nimport { ICityWeather } from '../../models/city-weather';\nimport { CityPage } from '../city/city';\n\n/**\n * Generated class for the CitiesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-cities',\n  templateUrl: 'cities.html',\n})\nexport class CitiesPage {\n  weathers: ICityWeather[] = [];\n  localWeather: ICityWeather = null;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private citiesProvider: CitiesProvider,\n    private weatherProvider: WeatherProvider,\n    public modalCtrl: ModalController) {\n  }\n\n  ionViewDidLoad() {\n    this.loadData();\n  }\n\n  addCity() {\n    const modal = this.modalCtrl.create(AddCityComponent);\n    modal.onDidDismiss(newCity => {\n      if (!!newCity) {\n        this.citiesProvider.saveInBookmark(newCity)\n          .then(() => this.loadBookmarkedCities());\n      }\n    });\n    modal.present();\n  }\n\n  loadBookmarkedCities() {\n    this.citiesProvider.getAllFromBookmarked()\n      .then(cities => this.weatherProvider.getWeather(cities)\n        .then(weathers => {\n          this.weathers = weathers;\n        }));\n  }\n\n  loadData(refresherEvent?: any) {\n    //refresherEvent is used for pull-to-refresh feature\n    Promise.all([\n      this.citiesProvider.getGeolocationCity().then(coord => {\n        this.weatherProvider.getWeatherFromCoord(coord.longitude, coord.latitude)\n          .then(localWeather => this.localWeather = localWeather);\n      }),\n      this.loadBookmarkedCities()]).then(() => {\n        if (!!refresherEvent) {\n          refresherEvent.complete();\n        }\n      });\n  }\n\n  goToCityDetail(cityWeather: ICityWeather) {\n    this.navCtrl.push(CityPage, { cityWeather: cityWeather });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/cities/cities.ts","export const config = {\n  \"openWeatherMapApiKey\": \"82eb800f0da158f50a9a227a9f3f4dab\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/config.ts","import { Component, ViewChild } from '@angular/core';\nimport { ICity } from '../../models/city';\nimport { CitiesProvider } from '../../providers/cities/cities';\nimport { Searchbar, ViewController } from 'ionic-angular';\n\n/**\n * Generated class for the AddCityComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'add-city',\n  templateUrl: 'add-city.html'\n})\nexport class AddCityComponent {\n  @ViewChild(Searchbar) inputSearch: Searchbar;\n  citiesResult: ICity[] = [];\n\n  constructor(private citiesProvider: CitiesProvider, public viewCtrl: ViewController) {\n  }\n\n  ionViewDidEnter() {\n    setTimeout(() => {\n      this.inputSearch.setFocus();\n    });\n  }\n\n  searchCities(ev: any) {\n    const query = ev.target.value;\n    if (query && query.trim() != '') {\n      this.citiesProvider.search(query)\n        .then(cities => this.citiesResult = [cities])\n        .catch(err => {\n          this.citiesResult = [];\n        });\n    } else {\n      this.citiesResult = [];\n    }\n  }\n\n  selectCity(city: ICity) {\n    this.viewCtrl.dismiss(city);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/add-city/add-city.ts","import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { WeatherProvider } from '../../providers/weather/weather';\nimport { CitiesProvider } from '../../providers/cities/cities';\nimport { ICityWeather } from '../../models/city-weather';\nimport { IWeatherValue } from '../../models/weather-value';\n\n/**\n * Generated class for the CityPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@Component({\n  selector: 'page-city',\n  templateUrl: 'city.html',\n})\nexport class CityPage {\n  cityWeather: ICityWeather = null;\n  forecastWeathers: IWeatherValue[] = [];\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    private weatherProvider: WeatherProvider,\n    private citiesProvider: CitiesProvider) {\n  }\n\n  ionViewDidLoad() {\n    this.cityWeather = this.navParams.get('cityWeather');\n    this.loadWeather();\n  }\n\n  deleteCity() {\n    this.citiesProvider.deleteInBookmark(this.cityWeather.city)\n      .then(() => this.navCtrl.goToRoot({ isNavRoot: true, animate: true }));\n  }\n\n  private loadWeather() {\n    this.weatherProvider.getForecastWeather(this.cityWeather.city)\n      .then(weathers => {\n        this.forecastWeathers = weathers;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/city/city.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { Geolocation } from '@ionic-native/geolocation';\n\nimport { CumulonimbusApp } from './app.component';\nimport { CitiesProvider } from '../providers/cities/cities';\nimport { WeatherProvider } from '../providers/weather/weather';\nimport { CitiesPage } from '../pages/cities/cities';\nimport { CityPage } from '../pages/city/city';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddCityComponent } from '../components/add-city/add-city';\nimport { IonicStorageModule } from '@ionic/Storage';\nimport { DateFnsModule } from 'ngx-date-fns';\n\n@NgModule({\n  declarations: [\n    CumulonimbusApp,\n    CitiesPage,\n    CityPage,\n    AddCityComponent\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(CumulonimbusApp),\n    HttpModule,\n    HttpClientModule,\n    IonicStorageModule.forRoot(),\n    DateFnsModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    CumulonimbusApp,\n    CitiesPage,\n    AddCityComponent,\n    CityPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler },\n    CitiesProvider,\n    WeatherProvider,\n    Geolocation\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { CitiesPage } from '../pages/cities/cities';\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class CumulonimbusApp {\n  rootPage: any = CitiesPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation';\nimport { Storage } from '@ionic/Storage';\nimport { ICity } from '../../models/city';\nimport { config } from '../../assets/config';\n\n/*\n  Generated class for the CitiesProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class CitiesProvider {\n  STORAGE_KEY = \"CITIES\";\n\n  constructor(\n    private geolocation: Geolocation,\n    private http: HttpClient,\n    private storage: Storage) {\n  }\n\n  /**\n   * Search if a city exists based on a search query\n   * @param query\n   */\n  search(query: string): Promise<ICity> {\n    return this.http.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${config.openWeatherMapApiKey}&units=metric&lang=fr`)\n      .toPromise().then((res: any) => {\n        return Promise.resolve(<ICity>{\n          id: res.id,\n          name: res.name,\n          country: res.sys.country\n        });\n      });\n  }\n\n  /**\n   * Get current geolocation position\n   */\n  getGeolocationCity() {\n    return this.geolocation.getCurrentPosition()\n      .then(resp => Promise.resolve(resp.coords))\n      .catch(error => Promise.reject(error));\n  }\n\n  /**\n   * Get boorkmarked cities\n   */\n  getAllFromBookmarked(): Promise<ICity[]> {\n    return this.storage.get(this.STORAGE_KEY).then(cities => {\n      return JSON.parse(cities) || [];\n    });\n  }\n\n  /**\n   * Delete a city in bookmarks\n   * @param city\n   */\n  deleteInBookmark(city: ICity): Promise<void> {\n    return this.getAllFromBookmarked().then(cities => {\n      this.storage.set(\n        this.STORAGE_KEY,\n        JSON.stringify(cities.filter(c => c.id !== city.id)));\n    });\n  }\n\n  /**\n   * Save a city in bookmarks\n   * @param city\n   */\n  saveInBookmark(city: ICity): Promise<void> {\n    return this.getAllFromBookmarked().then(cities => {\n      if (!cities.some(c => c.id === city.id))\n        cities.push(city);\n      this.storage.set(this.STORAGE_KEY, JSON.stringify(cities));\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cities/cities.ts"],"sourceRoot":""}